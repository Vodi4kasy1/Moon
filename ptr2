getgenv().standList = {
    ["The World"] = true,
    ["Star Platinum"] = true,
    ["Star Platinum: The World"] = true,
    ["Crazy Diamond"] = true,
    ["King Crimson"] = true,
    ["King Crimson Requiem"] = true,
    ["The Hand"] = true,
    ["Whitesnake"] = true,
    ["Stone Free"] = true,
    ["Red Hot Chili Pepper"] = true,
    ["Killer Queen"] = true,
    ["Gold Experience"] = true,
    ["Silver Chariot"] = true,
    ["Cream"] = true,
    ["Magician's Red"] = true,
    ["Soft & Wet"] = true
}
getgenv().waitUntilCollect = 0.5
getgenv().sortOrder = "Asc"
getgenv().lessPing = false
getgenv().autoRequiem = false
getgenv().NPCTimeOut = 15
getgenv().ItemCollectionDelay = 1
getgenv().SelectedItems = {
    "Mysterious Arrow",
    "Rokakaka",
    "Lucky Arrow",
    "Lucky Stone Mask"
}

game:GetService("CoreGui").DescendantAdded:Connect(function(child)
    if child.Name == "ErrorPrompt" then
        local GrabError = child:FindFirstChild("ErrorMessage", true)
        repeat task.wait() until GrabError.Text ~= "Label"
        local Reason = GrabError.Text
        if Reason:match("kick") or Reason:match("You") or Reason:match("conn") or Reason:match("rejoin") then
            game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
        end
    end
end)

repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer and game.Players.LocalPlayer.Character

local LocalPlayer = game.Players.LocalPlayer
local Character = LocalPlayer.Character
repeat task.wait() until Character:FindFirstChild("RemoteEvent") and Character:FindFirstChild("RemoteFunction")
local RemoteFunction, RemoteEvent = Character.RemoteFunction, Character.RemoteEvent
local HRP = Character.PrimaryPart
local part
local dontTPOnDeath = true

if LocalPlayer.PlayerStats.Level.Value == 50 then while true do print("Level 50, Auto pres disabled") task.wait(9999999) end end

wait(1)

if not LocalPlayer.PlayerGui:FindFirstChild("HUD") then
    local HUD = game:GetService("ReplicatedStorage").Objects.HUD:Clone()
    HUD.Parent = LocalPlayer.PlayerGui
end

RemoteEvent:FireServer("PressedPlay")

wait(2)

if LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") then
    LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
end

wait(1.5)

if LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then
    LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen"):Destroy()
end

task.spawn(function()
    if game.Lighting:WaitForChild("DepthOfField", 10) then
        game.Lighting.DepthOfField:Destroy()
    end
end)

local Data = {}
local File = pcall(function()
    Data = game:GetService('HttpService'):JSONDecode(readfile("AutoPres3_"..LocalPlayer.Name..".txt"))
end)

if not File and LocalPlayer.PlayerStats.Level.Value ~= 50 then
    Data = {
        ["Time"] = tick(),
        ["Prestige"] = LocalPlayer.PlayerStats.Prestige.Value,
        ["Level"] = LocalPlayer.PlayerStats.Level.Value
    }
    pcall(function()
        writefile("AutoPres3_"..LocalPlayer.Name..".txt", game:GetService('HttpService'):JSONEncode(Data))
    end)
end

local OldNamecallTP
OldNamecallTP = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local Arguments = {...}
    local Method = getnamecallmethod()
    if Method == "InvokeServer" and Arguments[1] == "idklolbrah2de" then
        return "  ___XP DE KEY"
    end
    return OldNamecallTP(self, ...)
end))

local OldIndexItem
OldIndexItem = hookmetamethod(LocalPlayer.Character.PrimaryPart.Position, "__index", newcclosure(function(self, Key)
    if not checkcaller() and Key:lower() == 'magnitude' and getcallingscript().Name == "ItemSpawn" then
        return 0
    end
    return OldIndexItem(self, Key)
end))

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local function TPReturner()
    local success, Site = pcall(function()
        if foundAnything == "" then
            return game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().sortOrder .. '&limit=100'))
        else
            return game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().sortOrder .. '&limit=100&cursor=' .. foundAnything))
        end
    end)
    if not success then return end

    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end

    local num = 0
    for _, v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _, Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("XenonAutoPres3ServerBlocker.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                task.wait()
                pcall(function()
                    writefile("XenonAutoPres3ServerBlocker.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    task.wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                task.wait(4)
            end
        end
    end
end

local function Teleport()
    while task.wait() do
        pcall(function()
            if getgenv().lessPing then
                game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
                game:GetService("TeleportService").TeleportInitFailed:Connect(function()
                    game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
                end)
                repeat task.wait() until game.JobId ~= game.JobId
            end
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

part = Instance.new("Part")
part.Parent = workspace
part.Anchored = true
part.Size = Vector3.new(25, 1, 25)
part.Position = Vector3.new(500, 2000, 500)
part.Transparency = 1

local function findItem(itemName)
    local ItemsDict = {
        ["Position"] = {},
        ["ProximityPrompt"] = {},
        ["Items"] = {}
    }
    for _, model in pairs(game:GetService("Workspace")["Item_Spawns"].Items:GetChildren()) do
        if model:IsA("Model") and model:FindFirstChild("ProximityPrompt") and model.ProximityPrompt.ObjectText == itemName then
            if model.ProximityPrompt.MaxActivationDistance > 0 then
                table.insert(ItemsDict["Items"], itemName)
                table.insert(ItemsDict["ProximityPrompt"], model.ProximityPrompt)
                table.insert(ItemsDict["Position"], model:GetPivot())
            end
        end
    end
    return ItemsDict
end

local function countItems(itemName)
    local itemAmount = 0
    for _, item in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if item.Name == itemName then
            itemAmount = itemAmount + 1
        end
    end
    return itemAmount
end

local function useItem(aItem, amount)
    local item = LocalPlayer.Backpack:WaitForChild(aItem, 5)
    if not item then
        Teleport()
    end
    if amount then
        LocalPlayer.Character.Humanoid:EquipTool(item)
        LocalPlayer.Character:WaitForChild("RemoteFunction"):InvokeServer("LearnSkill", {["Skill"] = "Worthiness " .. amount, ["SkillTreeType"] = "Character"})
        repeat item:Activate() task.wait() until LocalPlayer.PlayerGui:FindFirstChild("DialogueGui")
        local dialogueGui = LocalPlayer.PlayerGui:WaitForChild("DialogueGui")
        firesignal(dialogueGui.Frame.ClickContinue.MouseButton1Click)
        firesignal(dialogueGui.Frame.Options:WaitForChild("Option1").TextButton.MouseButton1Click)
        firesignal(dialogueGui.Frame.ClickContinue.MouseButton1Click)
        repeat task.wait() until dialogueGui.Frame.DialogueFrame.Frame.Line001.Container.Group001.Text == "You"
        firesignal(dialogueGui.Frame.ClickContinue.MouseButton1Click)
    end
end

local function getitem(item, itemIndex)
    local gotItem = false
    local timeout = getgenv().waitUntilCollect + 5
    if Character:FindFirstChild("SummonedStand") then
        if Character:FindFirstChild("SummonedStand").Value then
            RemoteFunction:InvokeServer("ToggleStand", "Toggle")
        end
    end
    LocalPlayer.Backpack.ChildAdded:Connect(function(newItem)
        if newItem.Name == item["Items"][itemIndex] then
            gotItem = true
        end
    end)
    task.spawn(function()
        while not gotItem do
            task.wait()
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.HumanoidRootPart then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = item["Position"][itemIndex] - Vector3.new(0, 12, 0)
            end
        end
    end)
    task.wait(getgenv().ItemCollectionDelay)
    task.spawn(function()
        if item["ProximityPrompt"][itemIndex].MaxActivationDistance > 0 then
            fireproximityprompt(item["ProximityPrompt"][itemIndex])
        end
        local screenGui = LocalPlayer.PlayerGui:WaitForChild("ScreenGui", 5)
        if not screenGui then
            return
        end
        local screenGuiPart = screenGui:WaitForChild("Part")
        for _, button in pairs(screenGuiPart:GetDescendants()) do
            if button:FindFirstChild("Part") then
                if button:IsA("ImageButton") and button:WaitForChild("Part").TextColor3 == Color3.new(0, 1, 0) then
                    repeat
                        firesignal(button.MouseEnter)
                        firesignal(button.MouseButton1Up)
                        firesignal(button.MouseButton1Click)
                        firesignal(button.Activated)
                        task.wait()
                    until not LocalPlayer.PlayerGui:FindFirstChild("ScreenGui")
                end
            end
        end
    end)
    task.spawn(function()
        for i = timeout, 1, -1 do
            task.wait(1)
        end
        if not gotItem then
            gotItem = true
            return
        end
    end)
    while not gotItem do
        task.wait()
    end
end

local function farmItem(itemName, amount)
    while countItems(itemName) < amount do
        local items = findItem(itemName)
        if #items["Position"] == 0 then
            task.wait(1)
            if countItems(itemName) < 4 then
                Teleport()
            end
            break
        end
        for itemIndex = 1, #items["Position"] do
            if countItems(itemName) >= amount then
                break
            end
            getitem(items, itemIndex)
            task.wait(0.1)
        end
        task.wait(0.5)
    end
    return true
end

local function attemptStandFarm()
    dontTPOnDeath = false
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(500, 2010, 500)
    if LocalPlayer.PlayerStats.Stand.Value == "None" then
        if countItems("Mysterious Arrow") < 2 or countItems("Rokakaka") < 2 then
            farmItem("Mysterious Arrow", 2)
            farmItem("Rokakaka", 2)
        end
        if countItems("Mysterious Arrow") >= 1 and countItems("Rokakaka") >= 1 then
            useItem("Mysterious Arrow", "II")
            repeat task.wait() until LocalPlayer.PlayerStats.Stand.Value ~= "None"
            if not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
                useItem("Rokakaka", "II")
            elseif getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
                dontTPOnDeath = true
                Teleport()
            end
        else
            Teleport()
        end
    elseif not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
        useItem("Rokakaka", "II")
    end
end

local function endDialogue(NPC, Dialogue, Option)
    RemoteEvent:FireServer("EndDialogue", {["NPC"] = NPC, ["Dialogue"] = Dialogue, ["Option"] = Option})
end

local function storyDialogue()
    local Quest = {
        ["Storyline"] = {"#1", "#1", "#1", "#2", "#3", "#3", "#3", "#4", "#5", "#6", "#7", "#8", "#9", "#10", "#11", "#11", "#12", "#14"},
        ["Dialogue"] = {"Dialogue2", "Dialogue6", "Dialogue6", "Dialogue3", "Dialogue3", "Dialogue3", "Dialogue6", "Dialogue3", "Dialogue5", "Dialogue5", "Dialogue5", "Dialogue4", "Dialogue7", "Dialogue6", "Dialogue8", "Dialogue11", "Dialogue3", "Dialogue2"}
    }
    for counter = 1, 18, 1 do
        RemoteEvent:FireServer("EndDialogue", {["NPC"] = "Storyline" .. " " .. Quest["Storyline"][counter], ["Dialogue"] = Quest["Dialogue"][counter], ["Option"] = "Option1"})
    end
end

local function killNPC(npcName, playerDistance, dontDestroyOnKill)
    local NPC = workspace.Living:WaitForChild(npcName, getgenv().NPCTimeOut)
    local beingTargeted = true
    local doneKilled = false
    local deadCheck
    if not NPC then
        Teleport()
    end
    local function setStandMorphPosition()
        pcall(function()
            if LocalPlayer.PlayerStats.Stand.Value == "None" then
                HRP.CFrame = NPC.HumanoidRootPart.CFrame - Vector3.new(0, 5, 0)
                return
            end
            if not Character:FindFirstChild("SummonedStand").Value or not Character:FindFirstChild("StandMorph") then
                RemoteFunction:InvokeServer("ToggleStand", "Toggle")
                return
            end
            Character.StandMorph.PrimaryPart.CFrame = NPC.HumanoidRootPart.CFrame + NPC.HumanoidRootPart.CFrame.lookVector * -1.1
            HRP.CFrame = Character.StandMorph.PrimaryPart.CFrame + Character.StandMorph.PrimaryPart.CFrame.lookVector - Vector3.new(0, playerDistance, 0)
            if not Character:FindFirstChild("FocusCam") then
                local FocusCam = Instance.new("ObjectValue", Character)
                FocusCam.Name = "FocusCam"
                FocusCam.Value = Character.StandMorph.PrimaryPart
            end
            if Character:FindFirstChild("FocusCam") and Character.FocusCam.Value ~= Character.StandMorph.PrimaryPart then
                Character.FocusCam.Value = Character.StandMorph.PrimaryPart
            end
        end)
    end
    local function BlockBreaker()
        if not NPC or NPC.Parent == nil then
            return
        end
        if game:GetService("CollectionService"):HasTag(NPC, "Blocking") then
            RemoteEvent:FireServer("InputBegan", {["Input"] = Enum.KeyCode.R})
        elseif NPC.Humanoid.Health <= 1 then
            task.spawn(function()
                task.wait(5)
                if NPC then
                    RemoteFunction:InvokeServer("Attack", "m1")
                end
            end)
        elseif NPC.Humanoid.Health >= 1 then
            RemoteFunction:InvokeServer("Attack", "m1")
        end
    end
    deadCheck = LocalPlayer.PlayerGui.HUD.Main.DropMoney.Money.ChildAdded:Connect(function(child)
        local number = tonumber(string.match(child.Name, "%d+"))
        if number and NPC then
            doneKilled = true
            deadCheck:Disconnect()
            if not dontDestroyOnKill then
                NPC:Destroy()
            end
        end
    end)
    while beingTargeted do
        task.wait()
        if not NPC or not NPC:FindFirstChild("HumanoidRootPart") then
            deadCheck:Disconnect()
            beingTargeted = false
        end
        task.spawn(setStandMorphPosition)
        task.spawn(BlockBreaker)
    end
    return doneKilled
end

local function checkPrestige(level, prestige)
    if (level == 35 and prestige == 0) or (level == 40 and prestige == 1) or (level == 45 and prestige == 2) then
        endDialogue("Prestige", "Dialogue2", "Option1")
        return true
    else
        return false
    end
end

local function allocateSkills()
    task.spawn(function()
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power V", ["SkillTreeType"] = "Stand"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power IV", ["SkillTreeType"] = "Stand"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power III", ["SkillTreeType"] = "Stand"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power II", ["SkillTreeType"] = "Stand"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power I", ["SkillTreeType"] = "Stand"})
    end)
end

local function autoStory()
    local questPanel = LocalPlayer.PlayerGui.HUD.Main.Frames.Quest.Quests
    local repeatCount = 0
    allocateSkills()
    if getgenv().autoRequiem and LocalPlayer.PlayerStats.Level.Value >= 25 and LocalPlayer.PlayerStats.Prestige.Value >= 1 and LocalPlayer.Backpack:FindFirstChild("Requiem Arrow") and (LocalPlayer.PlayerStats.Stand.Value == "King Crimson" or LocalPlayer.PlayerStats.Stand.Value == "Star Platinum") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(500, 2010, 500)
        local oldStand = LocalPlayer.PlayerStats.Stand.Value
        useItem("Requiem Arrow", "V")
        repeat task.wait() until LocalPlayer.PlayerStats.Stand.Value ~= oldStand
        autoStory()
    end
    if LocalPlayer.PlayerStats.Stand.Value == "None" and LocalPlayer.PlayerStats.Level.Value >= 3 and #questPanel:GetChildren() < 2 then
        attemptStandFarm()
    elseif not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] and LocalPlayer.PlayerStats.Level.Value >= 3 and dontTPOnDeath then
        attemptStandFarm()
    else
        while #questPanel:GetChildren() < 2 and repeatCount < 1000 do
            if not questPanel:FindFirstChild("Take down 3 vampires") then
                endDialogue("William Zeppeli", "Dialogue4", "Option1")
            end
            LocalPlayer.QuestsRemoteFunction:InvokeServer({[1] = "ReturnData"})
            storyDialogue()
            task.wait(0.01)
            repeatCount = repeatCount + 1
        end
        if repeatCount >= 1000 then
            Teleport()
        end
        if questPanel:FindFirstChild("Help Giorno by Defeating Security Guards") then
            if killNPC("Security Guard", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Defeat Leaky Eye Luca") and getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
            if killNPC("Leaky Eye Luca", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Defeat Bucciarati") then
            if killNPC("Bucciarati", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Collect $5,000 To Cover For Popo's Real Fortune") then
            if LocalPlayer.PlayerStats.Money.Value < 5000 then
                local function collectAndSell(toolName, amount)
                    if countItems(toolName) <= amount then
                        farmItem(toolName, amount)
                        Character.Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild(toolName))
                        endDialogue("Merchant", "Dialogue5", "Option2")
                        storyDialogue()
                        autoStory()
                    end
                    if LocalPlayer.PlayerStats.Money.Value < 5000 then
                        storyDialogue()
                        autoStory()
                    end
                end
                task.wait(10)
                collectAndSell("Mysterious Arrow", 25)
                collectAndSell("Rokakaka", 25)
                collectAndSell("Diamond", 10)
                collectAndSell("Steel Ball", 10)
                collectAndSell("Quinton's Glove", 10)
                collectAndSell("Ribcage Of The Saint's Corpse", 10)
                collectAndSell("Ancient Scroll", 10)
            end
            autoStory()
        elseif questPanel:FindFirstChild("Defeat Fugo And His Purple Haze") then
            if killNPC("Fugo", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Defeat Pesci") then
            if killNPC("Pesci", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Defeat Ghiaccio") then
            if killNPC("Ghiaccio", 15) then
                task.wait(1)
                storyDialogue()
                autoStory()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Defeat Diavolo") then
            killNPC("Diavolo", 15)
            endDialogue("Storyline #14", "Dialogue7", "Option1")
            if Character:WaitForChild("Requiem Arrow", 5) then
                LocalPlayer.Character.Humanoid.Health = 0
                Teleport()
            else
                autoStory()
            end
        elseif questPanel:FindFirstChild("Take down 3 vampires") then
            killNPC("Vampire", 15, false)
            autoStory()
        elseif LocalPlayer.PlayerStats.Level.Value == 50 then
            if Character:FindFirstChild("FocusCam") then
                Character.FocusCam:Destroy()
            end
            pcall(function()
                delfile("AutoPres3_" .. LocalPlayer.Name .. ".txt")
            end)
        end
    end
end

task.spawn(function()
    while task.wait(1) do
        if checkPrestige(LocalPlayer.PlayerStats.Level.Value, LocalPlayer.PlayerStats.Prestige.Value) then
            Teleport()
        elseif LocalPlayer.PlayerStats.Level.Value == 50 then
            break
        end
    end
end)

game.Workspace.Living.ChildAdded:Connect(function(character)
    if character.Name == LocalPlayer.Name then
        if LocalPlayer.PlayerStats.Level.Value == 50 then
        else
            if dontTPOnDeath then
                Teleport()
            else
                attemptStandFarm()
            end
        end
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    for _, child in pairs(LocalPlayer.Character:GetDescendants()) do
        if child:IsA("BasePart") and child.CanCollide == true then
            child.CanCollide = false
        end
    end
end)

hookfunction(workspace.Raycast, function()
    return
end)

local TweenService = game:GetService("TweenService")
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = LocalPlayer.PlayerGui
screenGui.Name = "MoonEffectGui"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.DisplayOrder = 100

local frame = Instance.new("Frame")
frame.Size = UDim2.new(1, 0, 1, 0)
frame.Position = UDim2.new(0, 0, 0, 0)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.3
frame.Parent = screenGui

local uiGradient = Instance.new("UIGradient")
uiGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 20)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
})
uiGradient.Rotation = 45
uiGradient.Parent = frame

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = frame

local topText = Instance.new("TextLabel")
topText.Size = UDim2.new(0.3, 0, 0.05, 0)
topText.Position = UDim2.new(0.35, 0, 0.02, 0)
topText.Text = "t.me/henyscripts"
topText.TextColor3 = Color3.fromRGB(255, 255, 255)
topText.BackgroundTransparency = 1
topText.TextScaled = true
topText.Font = Enum.Font.GothamBlack
topText.TextStrokeTransparency = 0.8
topText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
topText.Parent = frame

local topTextShadow = Instance.new("TextLabel")
topTextShadow.Size = UDim2.new(0.3, 0, 0.05, 0)
topTextShadow.Position = UDim2.new(0.35, 2, 0.02, 2)
topTextShadow.Text = "t.me/henyscripts"
topTextShadow.TextColor3 = Color3.fromRGB(0, 0, 0)
topTextShadow.BackgroundTransparency = 1
topTextShadow.TextScaled = true
topTextShadow.Font = Enum.Font.GothamBlack
topTextShadow.TextTransparency = 0.5
topTextShadow.TextStrokeTransparency = 1
topTextShadow.Parent = frame

local bottomText = Instance.new("TextLabel")
bottomText.Size = UDim2.new(0.3, 0, 0.05, 0)
bottomText.Position = UDim2.new(0.35, 0, 0.88, 0)
bottomText.Text = "[TEST]"
bottomText.TextColor3 = Color3.fromRGB(255, 255, 255)
bottomText.BackgroundTransparency = 1
bottomText.TextScaled = true
bottomText.Font = Enum.Font.GothamBlack
bottomText.TextStrokeTransparency = 0.8
bottomText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
bottomText.Parent = frame

local bottomTextShadow = Instance.new("TextLabel")
bottomTextShadow.Size = UDim2.new(0.3, 0, 0.05, 0)
bottomTextShadow.Position = UDim2.new(0.35, 2, 0.88, 2)
bottomTextShadow.Text = "[TEST]"
bottomTextShadow.TextColor3 = Color3.fromRGB(0, 0, 0)
bottomTextShadow.BackgroundTransparency = 1
bottomTextShadow.TextScaled = true
bottomTextShadow.Font = Enum.Font.GothamBlack
bottomTextShadow.TextTransparency = 0.5
bottomTextShadow.TextStrokeTransparency = 1
bottomTextShadow.Parent = frame

local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)

task.spawn(function()
    while true do
        local tweenOut = TweenService:Create(bottomText, tweenInfo, {TextTransparency = 1})
        local tweenOutShadow = TweenService:Create(bottomTextShadow, tweenInfo, {TextTransparency = 1})
        tweenOut:Play()
        tweenOutShadow:Play()
        tweenOut.Completed:Wait()
        bottomText.Text = "[TEST]"
        bottomTextShadow.Text = "[TEST]"
        local tweenIn = TweenService:Create(bottomText, tweenInfo, {TextTransparency = 0})
        local tweenInShadow = TweenService:Create(bottomTextShadow, tweenInfo, {TextTransparency = 0.5})
        tweenIn:Play()
        tweenInShadow:Play()
        tweenIn.Completed:Wait()
        task.wait(2)
        tweenOut:Play()
        tweenOutShadow:Play()
        tweenOut.Completed:Wait()
        bottomText.Text = "[PRIVATE]"
        bottomTextShadow.Text = "[PRIVATE]"
        tweenIn:Play()
        tweenInShadow:Play()
        tweenIn.Completed:Wait()
        task.wait(2)
    end
end)

local function spawnMoons()
    local moonCount = math.random(5, 15)
    for i = 1, moonCount do
        local moon = Instance.new("ImageLabel")
        moon.Size = UDim2.new(0, 40, 0, 40)
        moon.Position = UDim2.new(math.random(), 0, 0, -40)
        moon.BackgroundTransparency = 1
        moon.Image = "rbxassetid://18930449278"
        moon.Parent = frame

        local uiCornerMoon = Instance.new("UICorner")
        uiCornerMoon.CornerRadius = UDim.new(0.5, 0)
        uiCornerMoon.Parent = moon

        local tweenInfo = TweenInfo.new(
            math.random(3, 6),
            Enum.EasingStyle.Sine,
            Enum.EasingDirection.InOut
        )
        local tween = TweenService:Create(moon, tweenInfo, {Position = UDim2.new(moon.Position.X.Scale, 0, 1, 40)})
        tween:Play()
        tween.Completed:Connect(function()
            moon:Destroy()
        end)
    end
end

task.spawn(function()
    while true do
        pcall(spawnMoons)
        task.wait(0.8)
    end
end)

autoStory()
